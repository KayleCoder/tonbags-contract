;; https://docs.ton.org/develop/func/cookbook#how-to-calculate-a-contract-address-using-stateinit
slice calculate_storage_contract_address(cell state_init) inline {
    return begin_cell()
        .store_uint(4, 3) ;; 0x100 : $10 + anycast (Maybe = 0)
        .store_int(workchain(), 8)
        .store_uint(cell_hash(state_init), 256)
        .end_cell()
        .begin_parse();
}

;; https://docs.ton.org/develop/func/cookbook#how-to-build-a-stateinit-cell
cell build_storage_contract_stateinit(
    cell storage_contract_code,
    int torrent_hash, slice owner_address,
    int file_merkle_hash, int file_size_in_bytes
) {
    cell bag_info = begin_cell()
            .store_uint(torrent_hash, 256)
            .store_slice(owner_address)
            .store_uint(file_merkle_hash, 256)
            .store_uint(file_size_in_bytes, 64)
            .end_cell();
    
    cell storage_providers_info = begin_cell()
            .store_dict(new_dict())  ;; storage_providers
            .store_dict(new_dict())  ;; storage_provider_last_proof_times
            .store_dict(new_dict())  ;; storage_provider_next_proofs
            .end_cell();

    cell rewards_settlement_info = begin_cell()
            .store_dict(new_dict())  ;; total_rewards_settled_and_unclaimed_for_providers
            .store_dict(new_dict())  ;; per_sec_total_rewards_settled_for_providers
            .end_cell();
    
    cell init_data = begin_cell()
            .store_ref(bag_info)
            .store_dict(new_dict())  ;; rewards_params dict
            .store_ref(storage_providers_info)
            .store_ref(rewards_settlement_info)
            .end_cell();

    var state_init = begin_cell()
            .store_uint(0, 1) ;; split_depth:(Maybe (## 5))
            .store_uint(0, 1) ;; special:(Maybe TickTock)
            .store_uint(1, 1) ;; (Maybe ^Cell)
            .store_uint(1, 1) ;; (Maybe ^Cell)
            .store_uint(0, 1) ;; (HashmapE 256 SimpleLib)
            .store_ref(storage_contract_code)
            .store_ref(init_data)
            .end_cell();

    return state_init;
}
